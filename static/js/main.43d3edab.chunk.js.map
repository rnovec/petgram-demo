{"version":3,"sources":["util/auth.js","util/axios.js","api/users.js","context/auth.js","components/Navbar.jsx","components/Footer.jsx","layouts/Main.jsx","api/posts.js","util/time.js","components/CommentBox.jsx","components/Comment.jsx","context/posts.js","components/ConfirmDelete.jsx","components/PostContent.jsx","components/PostEdit.jsx","components/PostOptions.jsx","components/Post.jsx","components/PostCreate.jsx","hooks/useInifiniteScroll.js","pages/Home.jsx","components/Input.jsx","pages/Login.jsx","pages/Register.jsx","layouts/Profile.jsx","components/PostPreview.jsx","components/ProfileForm.jsx","components/AccountForm.jsx","components/ChangePassword.jsx","pages/Profile.jsx","router/GuardedRoute.jsx","router/index.jsx","serviceWorkerRegistration.js","index.jsx"],"names":["TokenKey","RefreshKey","getToken","Cookies","get","setToken","token","set","decodeToken","jwtDecode","isNearbyToExpire","decoded","today","Date","exp","setUTCSeconds","diffMs","Math","round","_axios","axios","create","baseURL","mode","credentials","timeout","interceptors","request","use","config","a","public","headers","Authorization","url","match","refresh","method","data","access","response","res","error","Promise","reject","console","log","login","changePassword","updateProfile","id","getUserPosts","AuthContext","createContext","AuthContextProvider","children","useState","isAuthenticated","setIsAuthenticated","user","setUser","authenticate","resolve","getUser","contextValue","defaultAvatar","logout","remove","Provider","value","Navbar","history","useHistory","useContext","className","to","src","onClick","push","Footer","href","Main","useEffect","getPosts","params","getPostComments","postLike","createPost","updatePost","removePost","createComment","timeSince","date","seconds","floor","interval","CommentBox","post_id","props","message","setMessage","e","preventDefault","trim","user_id","onComment","picture","onSubmit","rows","onChange","target","placeholder","Comment","comment","fullname","created","PostContext","PostContextProvider","posts","setPosts","currentPost","setCurrentPost","total","setTotal","getPostList","count","results","deletePost","filter","post","uuid","addPost","ConfirmDelete","showModal","setShowModal","isLoading","setIsLoading","toggleModal","PostContent","username","description","comments","length","likes","EditPostModal","selectedFile","setSelectedFile","filename","setFilename","setDescription","form_data","FormData","name","append","aria-label","photo","action","files","slice","type","PostOptions","showOptions","setShowOptions","role","Post","showComments","setShowComments","likeCont","setLikeCont","isLiked","setIsliked","setComments","indexOf","height","alt","getComments","map","newComment","NewPost","setIsloading","alert","aria-hidden","required","accept","htmlFor","useInfiniteScroll","callback","isFetching","setIsFetching","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","addEventListener","removeEventListener","Home","fetchMorePosts","limit","offset","listQuery","setListQuery","Input","autocomplete","isRounded","icon","isPassword","showPassword","setShowPassword","autoComplete","Login","setUsername","password","setPassword","width","Register","errors","setErrors","email","password_confirm","val","attr","Object","entries","Profile","PostPreview","ProfileForm","checked","setChecked","address","phone","form","setForm","class","defaultForm","old_password","ProfileReview","fetchUserPosts","isEdit","setIsEdit","toggleTab","then","GuardedRoute","Component","component","auth","rest","render","App","path","Boolean","location","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.43d3edab.chunk.js","sourcesContent":["import Cookies from 'js-cookie'\nimport jwtDecode from 'jwt-decode'\n\nconst TokenKey = 'Access-Token'\nconst RefreshKey = 'Refresh-Token'\n\nexport function getToken () {\n  return Cookies.get(TokenKey)\n}\n\nexport function getRefreshToken () {\n  return Cookies.get(RefreshKey)\n}\n\nexport function setToken (token) {\n  Cookies.set(TokenKey, token)\n}\n\nexport function setRefreshToken (token) {\n  Cookies.set(RefreshKey, token)\n}\n\nexport function removeToken () {\n  Cookies.remove(TokenKey)\n}\n\nexport function removeRefreshToken () {\n  Cookies.remove(RefreshKey)\n}\n\nexport function decodeToken (token) {\n  return jwtDecode(token)\n}\n\nexport function isNearbyToExpire(token) {\n  const decoded = decodeToken(token)\n  const today = new Date()\n  const exp = new Date(0)\n  exp.setUTCSeconds(decoded.exp)\n  const diffMs = exp - today\n  const diffMins = Math.round(((diffMs % 86400000) % 3600000) / 60000) // minutes\n  return diffMins < 15\n}\n\n","import axios from 'axios'\nimport { refreshToken } from '../api/users'\nimport { getToken, isNearbyToExpire, getRefreshToken, setToken } from './auth'\n\n// create singleton for axios\nconst _axios = axios.create({\n  baseURL:\n    process.env.NODE_ENV === 'development'\n      ? 'http://localhost:8000/api/v1'\n      : 'https://petgram-demo.herokuapp.com/api/v1',\n  mode: 'cors',\n  credentials: 'same-origin',\n  timeout: 20000\n})\n\n_axios.interceptors.request.use(async config => {\n  const token = getToken()\n  if (!config.public) {\n    config.headers.Authorization = 'Bearer ' + token\n\n    if (isNearbyToExpire(token) && !config.url.match(/refresh/)) {\n      const refresh = getRefreshToken()\n      config.headers.Authorization = 'Bearer ' + token\n      const res = await refreshToken({ refresh })\n      setToken(res.access)\n    }\n  }\n  return config\n})\n\n// response interceptor\n_axios.interceptors.response.use(\n  res => {\n    return res.data\n  },\n  error => {\n    try {\n      const { response } = error\n      return Promise.reject(response.data)\n    } catch (error) {\n      console.log(error)\n    }\n    return Promise.reject(error)\n  }\n)\n\nexport default _axios\n","import request from '../util/axios'\n\nexport function login (data) {\n  return request({\n    url: '/accounts/login',\n    method: 'POST',\n    public: true,\n    data\n  })\n}\n\nexport function refreshToken (data) {\n  return request({\n    url: '/accounts/refresh',\n    method: 'POST',\n    data\n  })\n}\n\n\nexport function register (data) {\n  return request({\n    url: '/accounts/register',\n    method: 'POST',\n    public: true,\n    data\n  })\n}\n\nexport function changePassword (data) {\n  return request({\n    url: '/accounts/change-password',\n    method: 'POST',\n    data\n  })\n}\n\n\nexport function getUserInfo (id) {\n  return request({\n    url: `/users/${id}`,\n    method: 'GET'\n  })\n}\n\nexport function updateProfile (id, data, headers = {}) {\n  return request({\n    url: `/users/${id}`,\n    headers,\n    method: 'PUT',\n    data\n  })\n}\n\nexport function removePicture (id) {\n  return request({\n    url: `/users/${id}/picture`,\n    method: 'PATCH'\n  })\n}\n\nexport function getUserPosts (id) {\n  return request({\n    url: `/users/${id}/posts`,\n    method: 'GET'\n  })\n}\n","import React, { createContext, useState } from 'react'\nimport { login, getUserInfo, refreshToken } from '../api/users'\nimport {\n  decodeToken,\n  getToken,\n  removeRefreshToken,\n  removeToken,\n  setRefreshToken,\n  setToken\n} from '../util/auth'\n\nexport const AuthContext = createContext()\n\nexport const AuthContextProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const [user, setUser] = useState({})\n  const defaultAvatar =\n    'https://cooplaaurora.com/resources/members/default-user.jpg'\n\n  const authenticate = async data => {\n    const res = await login(data)\n    setToken(res.access)\n    setRefreshToken(res.refresh)\n    setIsAuthenticated(true)\n    Promise.resolve(res)\n  }\n\n  const logout = () => {\n    removeToken()\n    removeRefreshToken()\n    setIsAuthenticated(false)\n    setUser({})\n  }\n\n  const getUser = async () => {\n    const token = getToken()\n    const data = decodeToken(token)\n    const user = await getUserInfo(data.id)\n    setUser(user)\n    Promise.resolve(user)\n  }\n\n  const contextValue = {\n    user,\n    isAuthenticated,\n    defaultAvatar,\n    getUser,\n    setUser,\n    setIsAuthenticated,\n    authenticate,\n    logout\n  }\n\n  // Global data with Context Provider\n  return (\n    <AuthContext.Provider value={contextValue}>{children}</AuthContext.Provider>\n  )\n}\n","import { useContext } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { AuthContext } from '../context/auth'\n\nexport default function Navbar () {\n  const history = useHistory()\n  const { user, logout } = useContext(AuthContext)\n\n  function handleLogout () {\n    logout()\n    history.push('/login')\n  }\n  return (\n    <div className='navbar is-inline-flex is-transparent'>\n      <div className='navbar-brand'>\n        <Link to='/' className='navbar-item'>\n          <img src='/petgram-demo/img/logo.png' />\n        </Link>\n      </div>\n      <div className='navbar-menu'>\n        <div className='navbar-item'>\n          {/* <div className='control has-icons-left'>\n            <input\n              className='input is-rounded is-small has-text-centered'\n              type='text'\n              placeholder='search'\n            />\n            <span className='icon is-left is-small'>\n              <i className='material-icons'>search</i>\n            </span>\n          </div> */}\n        </div>\n      </div>\n      <div className='navbar-item is-flex-touch'>\n        <Link className='navbar-item' to='/'>\n          <i className='material-icons'>home</i>\n        </Link>\n        <Link to={'/profile/' + user.id} className='navbar-item'>\n          <i className='material-icons'>person_outline</i>\n        </Link>\n        <a className='navbar-item' onClick={handleLogout}>\n          <i className='material-icons has-text-danger'>logout</i>\n        </a>\n      </div>\n    </div>\n  )\n}\n","export default function Footer () {\n  return (\n    <footer className='footer'>\n      <div className='container is-fluid'>\n        <div className='content has-text-centered'>\n          <p>\n            <strong>Petgram</strong> by &nbsp;\n            <a href='https://rnovec.github.io'>Raúl Novelo</a>. The source code\n            is licensed &nbsp;\n            <a href='http://opensource.org/licenses/mit-license.php'>MIT</a>\n          </p>\n        </div>\n      </div>\n    </footer>\n  )\n}\n","import React, { useContext, useEffect } from 'react'\nimport Navbar from '../components/Navbar'\nimport Footer from '../components/Footer'\nimport { AuthContext } from '../context/auth'\nimport '../css/index.css'\n\nexport default function Main ({ children }) {\n  const { getUser } = useContext(AuthContext)\n  useEffect(() => {\n    getUser()\n  }, [])\n  return (\n    <>\n      <Navbar />\n      {children}\n      <Footer />\n    </>\n  )\n}\n","import request from '../util/axios'\n\nexport function getPosts (params) {\n  return request({\n    url: '/posts',\n    method: 'GET',\n    params\n  })\n}\n\nexport function getPostComments (id) {\n  return request({\n    url: `/posts/${id}/comments`,\n    method: 'GET'\n  })\n}\n\nexport function postLike (id, data) {\n  return request({\n    url: `/posts/${id}/likes`,\n    method: 'PUT',\n    data\n  })\n}\n\nexport function createPost (data) {\n  return request({\n    url: '/posts',\n    method: 'POST',\n    headers: { 'Content-Type': 'multipart/form-data' },\n    data\n  })\n}\n\nexport function updatePost (id, data, headers) {\n  return request({\n    url: `/posts/${id}`,\n    method: 'PUT',\n    headers,\n    data\n  })\n}\n\n\nexport function removePost (id) {\n  return request({\n    url: `/posts/${id}`,\n    method: 'DELETE'\n  })\n}\n\nexport function createComment (data) {\n  return request({\n    url: '/comments',\n    method: 'POST',\n    data\n  })\n}\n","/**\n * Show plural label if time is plural number\n * @param {number} time\n * @param {string} label\n * @return {string}\n */\nfunction pluralize (time, label) {\n  if (time === 1) {\n    return time + label\n  }\n  return time + label + 's'\n}\n\n/**\n * Unused time ago filter\n * @param {number} time\n */\nexport function timeAgo (time) {\n  const between = Date.now() / 1000 - Number(time)\n  if (between < 3600) {\n    return pluralize(~~(between / 60), ' minute')\n  } else if (between < 86400) {\n    return pluralize(~~(between / 3600), ' hour')\n  } else {\n    return pluralize(~~(between / 86400), ' day')\n  }\n}\n\n/**\n * Time since filter\n * @param {string} date \n */\nexport function timeSince (date) {\n  var seconds = Math.floor((new Date() - new Date(date)) / 1000)\n\n  var interval = seconds / 31536000\n\n  if (interval > 1) {\n    return Math.floor(interval) + ' years'\n  }\n  interval = seconds / 2592000\n  if (interval > 1) {\n    return Math.floor(interval) + ' months'\n  }\n  interval = seconds / 86400\n  if (interval > 1) {\n    return Math.floor(interval) + ' days'\n  }\n  interval = seconds / 3600\n  if (interval > 1) {\n    return Math.floor(interval) + ' hours'\n  }\n  interval = seconds / 60\n  if (interval > 1) {\n    return Math.floor(interval) + ' minutes'\n  }\n  return Math.floor(seconds) + ' seconds'\n}\n","import { useContext, useState } from 'react'\nimport { createComment } from '../api/posts'\nimport { AuthContext } from '../context/auth'\n\nexport default function CommentBox ({ post_id, ...props }) {\n  const { user, defaultAvatar } = useContext(AuthContext)\n  const [message, setMessage] = useState('')\n\n  function onChangeMessage (e) {\n    e.preventDefault()\n    setMessage(e.target.value)\n  }\n\n  async function onSubmit (e) {\n    e.preventDefault()\n    if (message.trim()) {\n      const data = await createComment({\n        user_id: user.id,\n        post_id,\n        message\n      })\n      setMessage('')\n      props.onComment(data)\n    }\n  }\n\n  return (\n    <article className='media'>\n      <figure className='media-left'>\n        <p className='image is-48x48'>\n          <img className='is-rounded' src={user.picture || defaultAvatar} />\n        </p>\n      </figure>\n      <div className='media-content'>\n        <form onSubmit={onSubmit}>\n          <div className='field'>\n            <p className='control'>\n              <textarea\n                className='textarea'\n                rows='3'\n                value={message}\n                onChange={onChangeMessage}\n                placeholder='Add a comment...'\n              ></textarea>\n            </p>\n          </div>\n          <div className='field'>\n            <p className='control'>\n              <button className='button is-primary is-fullwidth'>\n                Post comment\n              </button>\n            </p>\n          </div>\n        </form>\n      </div>\n    </article>\n  )\n}\n","import { useContext } from 'react'\nimport { AuthContext } from '../context/auth'\nimport { timeSince } from '../util/time'\n\n\nexport default function Comment({ comment }) {\n  const { defaultAvatar } = useContext(AuthContext)\n\n  return (\n    <article className='media'>\n      <figure className='media-left'>\n        <p className='image is-32x32'>\n          <img className='is-rounded' src={comment.user.picture || defaultAvatar} />\n        </p>\n      </figure>\n      <div className='media-content'>\n        <div className='content'>\n          <p>\n            <strong>{comment.user.fullname}</strong>\n            <br />\n            {comment.message}\n            <br />\n            <small className='has-text-grey'>\n              <a href=\"#add-comment\">Reply</a> · {timeSince(comment.created)} ago\n            </small>\n          </p>\n        </div>\n        {/* \n        <article className='media'>\n          Vivamus quis semper metus, non tincidunt dolor. Vivamus in mi eu lorem\n          cursus ullamcorper sit amet nec massa.\n        </article>\n\n        <article className='media'>\n          Morbi vitae diam et purus tincidunt porttitor vel vitae augue.\n          Praesent malesuada metus sed pharetra euismod. Cras tellus odio,\n          tincidunt iaculis diam non, porta aliquet tortor.\n        </article> */}\n      </div>\n    </article>\n  )\n}\n","import React, { createContext, useState } from 'react'\nimport { getPosts, removePost } from '../api/posts'\n\nexport const PostContext = createContext()\n\nexport const PostContextProvider = ({ children }) => {\n  const [posts, setPosts] = useState([])\n  const [currentPost, setCurrentPost] = useState({})\n  const [total, setTotal] = useState(0)\n\n  const getPostList = async (params = {}) => {\n    const data = await getPosts(params)\n    setTotal(data.count)\n    setPosts([...posts, ...data.results])\n  }\n\n  const deletePost = async id => {\n    await removePost(id)\n    setPosts(posts.filter(post => post.uuid !== id))\n  }\n\n  const addPost = (post) => {\n    setPosts([post, ...posts])\n  }\n\n  const contextValue = {\n    posts,\n    currentPost,\n    total,\n    setCurrentPost,\n    setPosts,\n    getPostList,\n    addPost,\n    deletePost\n  }\n\n  // Global data with Context Provider\n  return (\n    <PostContext.Provider value={contextValue}>{children}</PostContext.Provider>\n  )\n}\n","import { useContext, useState } from 'react'\nimport { PostContext } from '../context/posts'\n\nexport default function ConfirmDelete ({ post_id }) {\n  const { deletePost } = useContext(PostContext)\n  const [showModal, setShowModal] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n\n  function toggleModal (e) {\n    e.preventDefault()\n    setShowModal(!showModal)\n  }\n  async function onDeletePost () {\n    setIsLoading(true)\n    await deletePost(post_id)\n    setShowModal(false)\n    setIsLoading(false)\n  }\n  return (\n    <>\n      <a onClick={toggleModal} className='dropdown-item has-text-danger'>\n        Delete post\n      </a>\n      <div className={`modal ${showModal ? 'is-active' : ''}`}>\n        <div className='modal-background'></div>\n        <div className='modal-card'>\n          <header className='modal-card-head'>\n            <p className='modal-card-title'>Are you sure?</p>\n          </header>\n          <section className='modal-card-body'>\n            This action will <b>permanently destroy the post</b>.\n          </section>\n          <footer className='modal-card-foot has-text-left'>\n            <button\n              className={`button is-danger ${isLoading ? 'is-loading' : ''}`}\n              onClick={onDeletePost}\n            >\n              Yes, I'm sure\n            </button>\n            <button className='button' onClick={toggleModal}>\n              No, take me back\n            </button>\n          </footer>\n        </div>\n      </div>\n    </>\n  )\n}\n","import { timeSince } from '../util/time'\n\nexport default function PostContent ({ post }) {\n  return (\n    <div className='media-content'>\n      <div className='content'>\n        <strong>{post.user.fullname}</strong> ·{' '}\n        <span>@{post.user.username}</span> ·{' '}\n        <small className='has-text-grey'>\n          <time>{timeSince(post.created)}</time> ago\n        </small>\n        <br />\n        {post.description}\n      </div>\n      <nav className='level is-mobile'>\n        <div className='level-left'>\n          &nbsp; &nbsp;\n          <a className='level-item'>\n            {post.comments.length} &nbsp;\n            <span className='icon is-small'>\n              <i className='fas fa-comments'></i>\n            </span>\n          </a>\n          &nbsp; &nbsp;\n          <a className='level-item has-text-danger'>\n            <span className='icon is-small'>\n              {post.likes.length}&nbsp;<i className='fas fa-heart'></i>\n            </span>\n          </a>\n        </div>\n      </nav>\n    </div>\n  )\n}\n","import { useContext, useEffect, useState } from 'react'\nimport { updatePost } from '../api/posts'\nimport { PostContext } from '../context/posts'\nimport PostContent from './PostContent'\n\nexport default function EditPostModal ({ post }) {\n  const [selectedFile, setSelectedFile] = useState({})\n  const [isLoading, setIsLoading] = useState(false)\n  const [filename, setFilename] = useState('')\n  const [description, setDescription] = useState('')\n  const { currentPost, setCurrentPost } = useContext(PostContext)\n\n  useEffect(() => {\n    setDescription(currentPost.description)\n  }, [currentPost])\n\n\n  function onFileChange (e) {\n    if (e.target.files[0]) {\n      setSelectedFile(e.target.files[0])\n      setFilename(e.target.files[0].name.slice(0, 10))\n    }\n  }\n\n  function onChange (e) {\n    setDescription(e.target.value)\n  }\n\n  async function onSubmit (e) {\n    e.preventDefault()\n    setIsLoading(true)\n    try {\n      const form_data = new FormData()\n      if (selectedFile.name)\n        form_data.append('photo', selectedFile, selectedFile.name)\n      form_data.append('description', description)\n      const data = await updatePost(post.uuid, form_data, {\n        'Content-Type': 'multipart/form-data'\n      })\n      setSelectedFile({})\n      setFilename('')\n      setCurrentPost(data)\n      console.log(data)\n    } catch (error) {\n      console.log(error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <>\n      {' '}\n      <div className={`modal ${currentPost.uuid ? 'is-active' : ''}`}>\n        <div className='modal-background'></div>\n        <div className='modal-card'>\n          <header className='modal-card-head'>\n            <p className='modal-card-title'>Edit Post</p>\n            <button\n              className='delete'\n              aria-label='close'\n              onClick={() => setCurrentPost({})}\n            ></button>\n          </header>\n          <section className='modal-card-body'>\n            <article className='media'>\n              <figure className='media-left'>\n                <img className='image is-128x128' src={currentPost.photo} />\n              </figure>\n              <PostContent post={currentPost} />\n            </article>\n            <form action=''>\n              <div className='field'>\n                <label className='label'>Description</label>\n                <div className='control'>\n                  <textarea\n                    className='textarea'\n                    placeholder='...'\n                    onChange={onChange}\n                    value={description}\n                  ></textarea>\n                </div>\n              </div>\n              <div className='field'>\n                <div className='file has-name'>\n                  <label className='file-label'>\n                    <input\n                      className='file-input'\n                      onChange={onFileChange}\n                      type='file'\n                      name='resume'\n                    />\n                    <span className='file-cta'>\n                      <span className='file-icon'>\n                        <i className='fas fa-upload'></i>\n                      </span>\n                      <span className='file-label'>Change photo</span>\n                    </span>\n                    {filename && <span className='file-name'>{filename}</span>}\n                  </label>\n                </div>\n              </div>\n            </form>\n          </section>\n          <footer className='modal-card-foot'>\n            <button\n              className={`button is-primary ${isLoading ? 'is-loading' : ''}`}\n              onClick={onSubmit}\n            >\n              Save changes\n            </button>\n            <button className='button' onClick={() => setCurrentPost({})}>\n              Cancel\n            </button>\n          </footer>\n        </div>\n      </div>\n    </>\n  )\n}\n","import { useContext, useState } from 'react'\nimport { PostContext } from '../context/posts'\nimport ConfirmDelete from './ConfirmDelete'\nimport PostEdit from './PostEdit'\n\nexport default function PostOptions ({ post }) {\n  const [showOptions, setShowOptions] = useState(false)\n  const { currentPost, setCurrentPost } = useContext(PostContext)\n  function toggleOptions (e) {\n    e.preventDefault()\n    setShowOptions(!showOptions)\n  }\n  return (\n    <div className={`dropdown ${showOptions ? 'is-active' : ''} is-right`}>\n      <div className='dropdown-trigger'>\n        <a href='' onClick={toggleOptions}>\n          <i className='material-icons'>more_vert</i>\n        </a>\n      </div>\n      <div className='dropdown-menu' id='dropdown-menu3' role='menu'>\n        <div className='dropdown-content'>\n          <a onClick={() => setCurrentPost(post)} className='dropdown-item'>\n            Edit\n          </a>\n          {currentPost.uuid && <PostEdit post={post} />}\n          <hr className='dropdown-divider' />\n          <ConfirmDelete post_id={post.uuid} />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useContext, useEffect, useState } from 'react'\nimport { getPostComments, postLike } from '../api/posts'\nimport { AuthContext } from '../context/auth'\nimport { timeSince } from '../util/time'\nimport AddComment from './CommentBox'\nimport Comment from './Comment'\nimport PostOptions from './PostOptions'\n\nexport default function Post ({ post }) {\n  const { user, defaultAvatar } = useContext(AuthContext)\n  const [showComments, setShowComments] = useState(false)\n  const [likeCont, setLikeCont] = useState(0)\n  const [isLiked, setIsliked] = useState(false)\n  const [comments, setComments] = useState([])\n\n  useEffect(() => {\n    setLikeCont(post.likes.length)\n    if (post.likes.indexOf(user.id) !== -1) setIsliked(true)\n  }, [post])\n\n  async function getComments () {\n    const res = await getPostComments(post.uuid)\n    setComments(res.results)\n  }\n\n  function onComment (newComment) {\n    setComments([...comments, newComment])\n    setShowComments(true)\n  }\n\n  async function likeDislike (e) {\n    e.preventDefault()\n    if (!isLiked) {\n      await postLike(post.uuid, {\n        user: user.id,\n        action: 'liked'\n      })\n      setLikeCont(likeCont + 1)\n      setIsliked(true)\n    } else {\n      await postLike(post.uuid, {\n        user: user.id,\n        action: 'dislike'\n      })\n      setLikeCont(likeCont - 1)\n      setIsliked(false)\n    }\n  }\n\n  return (\n    <div className='card'>\n      <div className='header'>\n        <div className='media'>\n          <div className='media-left'>\n            <figure className='image is-48x48 '>\n              <img\n                className='is-rounded'\n                height='0'\n                src={post.user.picture || defaultAvatar}\n                alt='Placeholder'\n              />\n            </figure>\n          </div>\n          <div className='media-content'>\n            <p className='title is-4'>{post.user.fullname}</p>\n            <p className='subtitle is-6'>@{post.user.username}</p>\n          </div>\n          {user.id === post.user.id && (\n            <div className='media-right'>\n              <PostOptions post={post} />\n            </div>\n          )}\n        </div>\n      </div>\n      <div className='card-image'>\n        <figure className='image is-4by3'>\n          <img src={post.photo} alt='Placeholder' />\n        </figure>\n      </div>\n      <div className='card-content'>\n        <div className='level is-mobile'>\n          <div className='level-left'>\n            <div className='level-item has-text-centered'>\n              <a onClick={likeDislike}>\n                <i className='material-icons has-text-danger'>\n                  {isLiked ? 'favorite' : 'favorite_border'}\n                </i>\n              </a>\n            </div>\n            <div className='level-item has-text-centered'>\n              <div>\n                {showComments ? (\n                  <a onClick={() => setShowComments(false)}>\n                    <i className='material-icons'>chat_bubble</i>\n                  </a>\n                ) : (\n                  <a\n                    onClick={() => {\n                      setShowComments(true)\n                      getComments()\n                    }}\n                  >\n                    <i className='material-icons'>chat_bubble_outline</i>\n                  </a>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className='content'>\n          <strong>{likeCont} Likes</strong>\n          <br />\n          {post.description}\n          {/* <a>@bulmaio</a>.<a href='#'>#css</a>\n          <a href='#'>#responsive</a> */}\n          <br />\n          <time>{timeSince(post.created)}</time> ago\n        </div>\n        {showComments &&\n          comments.map(comment => (\n            <Comment key={comment.uuid} comment={comment} />\n          ))}\n      </div>\n\n      <div id='add-comment' className='card-footer'>\n        <div className='column is-12'>\n          <AddComment post_id={post.uuid} onComment={onComment} />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState, useContext } from 'react'\nimport { useHistory, Link } from 'react-router-dom'\nimport { createPost } from '../api/posts'\nimport { AuthContext } from '../context/auth'\nimport { PostContext } from '../context/posts'\n\nexport default function NewPost () {\n  const history = useHistory()\n  const { user, defaultAvatar } = useContext(AuthContext)\n  const { addPost } = useContext(PostContext)\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [filename, setFilename] = useState('')\n  const [description, setDescription] = useState('')\n  const [isLoading, setIsloading] = useState(false)\n\n  function handleChange (e) {\n    setSelectedFile(e.target.files[0])\n    setFilename(e.target.files[0].name.slice(0, 10))\n  }\n\n  function onDescriptionChange (e) {\n    setDescription(e.target.value)\n  }\n\n  async function onSubmit (e) {\n    e.preventDefault()\n    if (!user.picture) history.push('/profile')\n    if (filename && description) {\n      setIsloading(true)\n      const form_data = new FormData()\n      form_data.append('photo', selectedFile, selectedFile.name)\n      form_data.append('description', description)\n      form_data.append('user_id', user.id)\n      try {\n        const data = await createPost(form_data)\n        addPost(data)\n        setDescription('')\n        setSelectedFile({})\n        setFilename('')\n      } catch (error) {\n      } finally {\n        setIsloading(false)\n      }\n    } else {\n      alert('Please provide a description')\n    }\n  }\n\n  return (\n    <div className='card'>\n      <header className='card-header'>\n        <p className='card-header-title'>\n          <span className='icon is-medium'>\n            <i className='fas fa-image' aria-hidden='true'></i>\n          </span>\n          Create a new post\n        </p>\n      </header>\n      <div className='card-content'>\n        <article className='media'>\n          <figure className='media-left image is-48x48'>\n            <img className='is-rounded' src={user.picture || defaultAvatar} />\n          </figure>\n          <div className='media-content'>\n            <div className='field'>\n              <p className={`control ${isLoading ? 'is-loading' : ''}`}>\n                <textarea\n                  className='textarea'\n                  onChange={onDescriptionChange}\n                  value={description}\n                  rows='3'\n                  required\n                  placeholder='Add a description...'\n                ></textarea>\n              </p>\n            </div>\n          </div>\n        </article>\n        <div className='field'>\n          <div className='control'>\n            <input\n              id='photo'\n              accept=\"image/png, image/jpeg\"\n              className='file-input'\n              onChange={handleChange}\n              type='file'\n              name='resume'\n            />\n          </div>\n        </div>\n      </div>\n      <footer className='card-footer'>\n        <label htmlFor='photo' className='card-footer-item file-label'>\n          <i className='material-icons'>perm_media</i>&nbsp;\n          {filename ? filename + '...' : 'Add photo'}\n        </label>\n        {isLoading ? (\n          <a className='card-footer-item button is-white is-loading'>\n            <i className='material-icons'>send</i>&nbsp;Publish\n          </a>\n        ) : (\n          <a onClick={onSubmit} className='card-footer-item'>\n            <i className='material-icons'>send</i>&nbsp;Publish\n          </a>\n        )}\n      </footer>\n    </div>\n  )\n}\n","import { useState, useEffect } from 'react'\n\nconst useInfiniteScroll = callback => {\n  const [isFetching, setIsFetching] = useState(false)\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll)\n    return () => window.removeEventListener('scroll', handleScroll)\n  }, [])\n\n  useEffect(() => {\n    if (!isFetching) return\n    callback()\n  }, [isFetching])\n\n  function handleScroll () {\n    if (\n      window.innerHeight + document.documentElement.scrollTop !==\n        document.documentElement.offsetHeight ||\n      isFetching\n    )\n      return\n    setIsFetching(true)\n  }\n\n  return [isFetching, setIsFetching]\n}\n\nexport default useInfiniteScroll\n","import React, { useContext, useEffect, useState } from 'react'\nimport Main from '../layouts/Main'\nimport Post from '../components/Post'\nimport PostCreate from '../components/PostCreate'\nimport { PostContext } from '../context/posts'\nimport '../css/index.css'\nimport useInfiniteScroll from '../hooks/useInifiniteScroll'\n\nexport default function Home () {\n  const { posts, getPostList, total, setPosts } = useContext(PostContext)\n  const [isFetching, setIsFetching] = useInfiniteScroll(fetchMorePosts)\n  const [listQuery, setListQuery] = useState({\n    limit: 5,\n    offset: 0\n  })\n\n  useEffect(() => {\n    setPosts([])\n    fetchMorePosts()\n  }, [])\n\n  async function fetchMorePosts () {\n    if (posts.length <= total && listQuery.offset > total) {\n      setIsFetching(false)\n      return\n    }\n    setIsFetching(true)\n    await getPostList(listQuery)\n    setIsFetching(false)\n    setListQuery({\n      limit: listQuery.limit,\n      offset: listQuery.offset + listQuery.limit\n    })\n  }\n\n  return (\n    <Main>\n      <section className='section'>\n        <div className='columns body-columns'>\n          <div className='column is-half is-offset-one-quarter'>\n            <PostCreate />\n            {posts.map(post => (\n              <Post post={post} key={post.uuid} />\n            ))}\n            {isFetching && (\n              <div className='section has-text-centered'>\n                Loading latest posts...\n              </div>\n            )}\n          </div>\n        </div>\n      </section>\n    </Main>\n  )\n}\n","import { useState } from 'react'\n\nexport default function Input ({\n  type = 'text',\n  name,\n  autocomplete,\n  placeholder,\n  isRounded,\n  value,\n  required,\n  icon,\n  isPassword,\n  ...props\n}) {\n  const [showPassword, setShowPassword] = useState(false)\n\n  function togglePassword () {\n    setShowPassword(!showPassword)\n  }\n\n  return (\n    <div className='field'>\n      <div\n        className={`control ${icon ? 'has-icons-left' : ''} ${\n          isPassword ? 'has-icons-right' : ''\n        }`}\n      >\n        <input\n          className={`input ${isRounded ? 'is-rounded' : ''}`}\n          onChange={props.onChange}\n          name={name}\n          autoComplete={autocomplete}\n          value={value}\n          type={isPassword && showPassword ? 'text' : type}\n          required={!!required}\n          placeholder={placeholder}\n        />\n        {icon && (\n          <span className='icon is-small is-left'>\n            <i className='material-icons'>{icon}</i>\n          </span>\n        )}\n        {isPassword && (\n          <span\n            className='icon is-small is-right is-clickable'\n            onClick={togglePassword}\n          >\n            <i className='material-icons'>\n              {showPassword ? 'visibility' : 'visibility_off'}\n            </i>\n          </span>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useContext } from 'react'\nimport { useHistory, Link } from 'react-router-dom'\nimport Input from '../components/Input'\nimport { AuthContext } from '../context/auth'\nimport '../css/login.css'\n\nexport default function Login () {\n  const history = useHistory()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const { authenticate } = useContext(AuthContext)\n\n  function onChangeUsername (e) {\n    setUsername(e.target.value)\n  }\n\n  function onChangePassword (e) {\n    setPassword(e.target.value)\n  }\n\n  async function onSubmit (e) {\n    e.preventDefault()\n    setIsLoading(true)\n    try {\n      await authenticate({ username, password })\n      history.push('/')\n    } catch (error) {\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <section className='hero is-fullheight'>\n      <div className='hero-body has-text-centered'>\n        <div className='login'>\n          <img\n            src='/petgram-demo/img/logo.png'\n            alt='login-logo'\n            width='300px'\n          />\n          <br />\n          <form onSubmit={onSubmit}>\n            <Input\n              className='input is-rounded'\n              type='text'\n              placeholder='Username'\n              autoComplete='username'\n              icon='person'\n              onChange={onChangeUsername}\n              isRounded\n              required\n            />\n            <Input\n              autocomplete='password'\n              type='password'\n              placeholder='Password'\n              name='password'\n              icon='lock'\n              isPassword\n              onChange={onChangePassword}\n              isRounded\n              required\n            />{' '}\n            <button\n              className={`button is-block is-fullwidth is-primary is-medium is-rounded ${\n                isLoading ? 'is-loading' : ''\n              }`}\n              type='submit'\n            >\n              Login\n            </button>\n          </form>\n          <br />\n          <nav className='level'>\n            {/* <div className='level-item has-text-centered'>\n              <div>\n                <a>Forgot Password?</a>\n              </div>\n            </div> */}\n            <div className='level-item has-text-centered'>\n              <Link to='/register'>Create an Account</Link>\n            </div>\n          </nav>\n        </div>\n      </div>\n    </section>\n  )\n}\n","import React, { useContext, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\nimport { register } from '../api/users'\nimport Input from '../components/Input'\nimport { AuthContext } from '../context/auth'\nimport '../css/register.css'\n\nexport default function Register () {\n  const history = useHistory()\n  const { authenticate } = useContext(AuthContext)\n  const [isLoading, setIsLoading] = useState(false)\n  const [errors, setErrors] = useState([])\n  const [user, setUser] = useState({\n    username: '',\n    fullname: '',\n    email: '',\n    password: '',\n    password_confirm: ''\n  })\n\n  function onChange (e) {\n    const val = e.target.value\n    const attr = e.target.name\n    setUser({ ...user, [attr]: val })\n  }\n\n  const onSubmit = async e => {\n    e.preventDefault()\n    setIsLoading(true)\n    setErrors([])\n    try {\n      const { username, password } = user\n      await register(user)\n      await authenticate({ username, password })\n      history.push('/')\n    } catch (error) {\n      setErrors(Object.entries(error))\n    } finally {\n      setIsLoading(false)\n    }\n  }\n  return (\n    <section className='section container'>\n      <div className='columns is-multiline'>\n        <div className='column is-8 is-offset-2 register '>\n          <div className='columns'>\n            <div className='column left is-hidden-mobile'>\n              <img src='/petgram-demo/img/woman_mevk.svg' />\n              <h2 className='subtitle colored is-4'>\n                Lorem ipsum dolor sit amet.\n              </h2>\n              <p>\n                Lorem, ipsum dolor sit amet consectetur adipisicing elit.\n                Corporis ex deleniti aliquam tempora libero excepturi vero\n                soluta odio optio sed.\n              </p>\n            </div>\n            <div className='column right has-text-centered justify-center'>\n              <img\n                src='/petgram-demo/img/logo.png'\n                alt='login-logo'\n                width='325px'\n              />\n              <h1 className='title is-4'>Sign up today</h1>\n\n              <form onSubmit={onSubmit}>\n                <Input\n                  autocomplete='username'\n                  placeholder='Username'\n                  name='username'\n                  value={user.username}\n                  onChange={onChange}\n                  isRounded\n                  required\n                />\n                <Input\n                  autocomplete='name'\n                  placeholder='Full name'\n                  name='fullname'\n                  value={user.fullname}\n                  onChange={onChange}\n                  isRounded\n                  required\n                />\n                <Input\n                  autocomplete='email'\n                  type='email'\n                  placeholder='Email'\n                  name='email'\n                  value={user.email}\n                  onChange={onChange}\n                  isRounded\n                  required\n                />\n                <Input\n                  autocomplete='password'\n                  type='password'\n                  placeholder='Password'\n                  name='password'\n                  isPassword\n                  value={user.password}\n                  onChange={onChange}\n                  isRounded\n                  required\n                />\n                <Input\n                  autocomplete='password_confirm'\n                  type='password'\n                  placeholder='Confirm'\n                  name='password_confirm'\n                  isPassword\n                  value={user.password_confirm}\n                  onChange={onChange}\n                  isRounded\n                  required\n                />\n                {errors.length ? (\n                  <div className='field'>\n                    <p className='help is-danger'>{errors[0][1] || ''}</p>\n                  </div>\n                ) : (\n                  <></>\n                )}\n\n                <button\n                  className={`button is-medium is-rounded is-block is-primary is-fullwidth ${\n                    isLoading ? 'is-loading' : ''\n                  }`}\n                >\n                  Submit\n                </button>\n                <br />\n                <small>\n                  Already have an account? <Link to='/login'>Login</Link>\n                </small>\n              </form>\n            </div>\n          </div>\n        </div>\n        <div className='column is-8 is-offset-2'>\n          <br />\n          <nav className='level'>\n            <div className='level-left'>\n              <div className='level-item'>\n                <a className='icon'>\n                  <i className='fab fa-facebook'></i>\n                </a>{' '}\n                &emsp;\n                <a className='icon'>\n                  <i className='fab fa-instagram'></i>\n                </a>{' '}\n                &emsp;\n                <a\n                  className='icon'\n                  target='_blank'\n                  href='https://github.com/rnovec/petgram-demo'\n                >\n                  <i className='fab fa-github'></i>\n                </a>{' '}\n                &emsp;\n                <a className='icon' href='mailto:raul.novelo@aaaimx.org'>\n                  <i className='fas fa-envelope'></i>\n                </a>\n              </div>\n            </div>\n            <div className='level-right'>\n              <small className='level-item'>\n                &copy; Petgram. All Rights Reserved.\n              </small>\n            </div>\n          </nav>\n        </div>\n      </div>\n    </section>\n  )\n}\n","import { useContext } from 'react'\nimport { AuthContext } from '../context/auth'\nimport '../css/profile.css'\nimport '../css/profile-card.css'\n\nexport default function Profile ({ children, ...props }) {\n  const { user, defaultAvatar } = useContext(AuthContext)\n\n  return (\n    <section className='section container'>\n      <div className='columns'>\n        <div className='column is-4 '>\n          <aside className='menu'>\n            <ul className='menu-list'>\n              <div className='card box has-text-centered'>\n                <figure className='avatar'>\n                  <img width='200' src={user.picture || defaultAvatar} />\n                </figure>\n                <div className='media-content'>\n                  <p className='title is-4'>{user.fullname}</p>\n                  <p className='subtitle is-6'>@{user.username}</p>\n                  <ul className='has-text-centered'>\n                    <li>\n                      <span className='icon'>\n                        <i className='fas fa-envelope' aria-hidden='true'></i>\n                      </span>\n                      &nbsp; {user.email}\n                    </li>\n                  </ul>\n                </div>\n                <br />\n                <footer className='card-footer'>\n                  <div className='card-footer-item'>\n                    <span className='icon has-text-info'>\n                      <i className='fas fa-image'></i>&nbsp;{props.total || 0}\n                    </span>\n                  </div>\n                  <div className='card-footer-item'>\n                    <span className='icon has-text-danger'>\n                      <i className='fas fa-heart'></i>&nbsp;0\n                    </span>\n                  </div>\n                </footer>\n              </div>\n            </ul>\n          </aside>\n        </div>\n        {children}\n      </div>\n    </section>\n  )\n}\n","import PostOptions from './PostOptions'\nimport PostContent from './PostContent'\n\nexport default function PostPreview ({ post }) {\n  return (\n    <article className='media box'>\n      <div className='media-left'>\n        <p>\n          <img className='image is-64x64' src={post.photo} />\n        </p>\n      </div>\n      <PostContent post={post} />\n      <div className='media-right'>\n        <PostOptions post={post} />\n      </div>\n      <hr />\n    </article>\n  )\n}\n","import { useContext, useEffect, useState } from 'react'\nimport { updateProfile } from '../api/users'\nimport { AuthContext } from '../context/auth'\n\nexport default function ProfileForm () {\n  const { user, setUser } = useContext(AuthContext)\n  const [selectedFile, setSelectedFile] = useState({})\n  const [isLoading, setIsLoading] = useState(false)\n  const [checked, setChecked] = useState(false)\n\n  const [form, setForm] = useState({\n    id: null,\n    picture: '',\n    address: '',\n    phone: ''\n  })\n\n  useEffect(() => {\n    setForm(user)\n  }, [])\n\n  function onChange (e) {\n    const val = e.target.value\n    const attr = e.target.name\n    console.log(val)\n    setForm({ ...form, [attr]: val })\n  }\n\n  function onChangeFile (e) {\n    setSelectedFile(e.target.files[0])\n  }\n\n  async function onSubmit (e) {\n    e.preventDefault()\n    setIsLoading(true)\n    try {\n      const form_data = new FormData()\n      if (selectedFile.name)\n        form_data.append('picture', selectedFile, selectedFile.name)\n      if (checked) form_data.append('clearAvatar', checked)\n      form_data.append('email', user.email)\n      form_data.append('username', user.username)\n      form_data.append('address', form.address)\n      form_data.append('phone', form.phone)\n\n      const data = await updateProfile(user.id, form_data, {\n        'Content-Type': 'multipart/form-data'\n      })\n      setUser(data)\n      setSelectedFile({})\n    } catch (error) {\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <form className='box' onSubmit={onSubmit}>\n      <h3>Profile</h3>\n\n      <div className='field is-horizontal'>\n        <div className='field-label'>\n          <label className='label'>Avatar</label>\n        </div>\n        <div className='field-body'>\n          <div className='field file has-name'>\n            <label className='file-label'>\n              <input\n                className='file-input'\n                type='file'\n                name='resume'\n                onChange={onChangeFile}\n              />\n              <span className='file-cta'>\n                <span className='file-icon'>\n                  <i className='fas fa-upload'></i>\n                </span>\n                <span className='file-label'>Change avatar</span>\n              </span>\n\n              {selectedFile.name && (\n                <span className='file-name'>{selectedFile.name}</span>\n              )}\n            </label>\n          </div>\n          {user.picture && (\n            <p className='help'>\n              <a target='_blank' href={user.picture}>\n                Current\n              </a>\n            </p>\n          )}\n        </div>\n      </div>\n\n      <div class='field is-horizontal'>\n        <div className='field-label'></div>\n        <div className='field-body'>\n          <div className='field'>\n            <div class='control'>\n              <label class='checkbox'>\n                <input\n                  type='checkbox'\n                  checked={checked}\n                  onChange={() => setChecked(!checked)}\n                />{' '}\n                &nbsp;Clear avatar\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className='field is-horizontal'>\n        <div className='field-label is-normal'>\n          <label className='label'>Address</label>\n        </div>\n        <div className='field-body'>\n          <div className='field'>\n            <div className='control'>\n              <input\n                className='input'\n                type='text'\n                placeholder='Address'\n                name='address'\n                onChange={onChange}\n                value={form.address}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className='field is-horizontal'>\n        <div className='field-label is-normal'>\n          <label className='label'>Phone</label>\n        </div>\n        <div className='field-body'>\n          <div className='field has-addons'>\n            <p className='control'>\n              <a className='button is-static'>+52</a>\n            </p>\n            <p className='control is-expanded'>\n              <input\n                className='input'\n                type='tel'\n                placeholder='Your phone number'\n                name='phone'\n                onChange={onChange}\n                value={form.phone}\n              />\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <div className='field is-horizontal'>\n        <div className='field-label'></div>\n        <div className='field-body'>\n          <div className='field'>\n            <div className='control'>\n              <button\n                className={`button is-primary ${isLoading ? 'is-loading' : ''}`}\n              >\n                Save changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  )\n}\n","import { useContext, useEffect, useState } from 'react'\nimport { updateProfile } from '../api/users'\nimport { AuthContext } from '../context/auth'\nimport Input from './Input'\n\nexport default function ProfileForm () {\n  const { user, setUser } = useContext(AuthContext)\n  const [isLoading, setIsLoading] = useState(false)\n  const [form, setForm] = useState({\n    username: '',\n    fullname: '',\n    email: ''\n  })\n\n  useEffect(() => {\n    setForm(user)\n  }, [])\n\n  function onChange (e) {\n    const val = e.target.value\n    const attr = e.target.name\n    setForm({ ...form, [attr]: val })\n  }\n\n  async function onSubmit (e) {\n    e.preventDefault()\n    setIsLoading(true)\n    try {\n      const postForm = form\n      delete postForm.picture\n      const data = await updateProfile(user.id, form)\n      setUser(data)\n    } catch (error) {\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <form className='box' onSubmit={onSubmit}>\n      <h3>Basic Info</h3>\n      <div className='field is-horizontal'>\n        <div className='field-label is-normal'>\n          <label className='label'>Account</label>\n        </div>\n        <div className='field-body'>\n          <Input\n            className='input'\n            type='text'\n            icon='person'\n            placeholder='Username'\n            name='username'\n            onChange={onChange}\n            value={form.username}\n          />\n          <Input\n            className='input is-success'\n            type='email'\n            icon='email'\n            placeholder='Email'\n            name='email'\n            onChange={onChange}\n            value={form.email}\n          />\n        </div>\n      </div>\n\n      <div className='field is-horizontal'>\n        <div className='field-label is-normal'>\n          <label className='label'>Fullname</label>\n        </div>\n        <div className='field-body'>\n          <Input\n            className='input'\n            type='text'\n            placeholder='First name'\n            name='fullname'\n            onChange={onChange}\n            value={form.fullname}\n          />\n        </div>\n      </div>\n      <div className='field is-horizontal'>\n        <div className='field-label'></div>\n        <div className='field-body'>\n          <div className='field'>\n            <div className='control'>\n              <button\n                className={`button is-primary ${isLoading ? 'is-loading' : ''}`}\n              >\n                Save changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  )\n}\n","import { useState } from 'react'\nimport { changePassword } from '../api/users'\nimport Input from './Input'\n\nexport default function ProfileForm () {\n  const [isLoading, setIsLoading] = useState(false)\n  const defaultForm = {\n    old_password: '',\n    password: '',\n    password_confirm: ''\n  }\n  const [form, setForm] = useState(defaultForm)\n\n  function onChange (e) {\n    const val = e.target.value\n    const attr = e.target.name\n    setForm({ ...form, [attr]: val })\n  }\n\n  async function onSubmit (e) {\n    e.preventDefault()\n    setIsLoading(true)\n    try {\n      await changePassword(form)\n      setForm(defaultForm)\n    } catch (error) {\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <form className='box' onSubmit={onSubmit}>\n      <h3>Change password</h3>\n      <div className='field is-horizontal'>\n        <div className='field-label is-normal'>\n          <label className='label'>Current</label>\n        </div>\n        <div className='field-body'>\n          <Input\n            className='input'\n            type='password'\n            icon='lock'\n            isPassword\n            placeholder='Current'\n            name='old_password'\n            onChange={onChange}\n            value={form.old_password}\n          />\n        </div>\n      </div>\n      <div className='field is-horizontal'>\n        <div className='field-label is-normal'>\n          <label className='label'>Password</label>\n        </div>\n        <div className='field-body'>\n          <Input\n            className='input'\n            type='password'\n            icon='lock'\n            isPassword\n            placeholder='Password'\n            name='password'\n            onChange={onChange}\n            value={form.password}\n          />\n        </div>\n      </div>\n      <div className='field is-horizontal'>\n        <div className='field-label is-normal'>\n          <label className='label'>Confirm</label>\n        </div>\n        <div className='field-body'>\n          <Input\n            className='input'\n            type='password'\n            icon='lock'\n            isPassword\n            placeholder='Confirm password'\n            name='password_confirm'\n            onChange={onChange}\n            value={form.password_confirm}\n          />\n        </div>\n      </div>\n      <div className='field is-horizontal'>\n        <div className='field-label'></div>\n        <div className='field-body'>\n          <div className='field'>\n            <div className='control'>\n              <button\n                className={`button is-primary ${isLoading ? 'is-loading' : ''}`}\n              >\n                Save changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  )\n}\n","import { useContext, useEffect, useState } from 'react'\nimport Main from '../layouts/Main'\nimport Profile from '../layouts/Profile'\nimport PostPreview from '../components/PostPreview'\nimport ProfileForm from '../components/ProfileForm'\nimport AccountForm from '../components/AccountForm'\nimport ChangePassword from '../components/ChangePassword'\nimport { AuthContext } from '../context/auth'\nimport { PostContext } from '../context/posts'\nimport { getUserPosts } from '../api/users'\nimport useInfiniteScroll from '../hooks/useInifiniteScroll'\nimport '../css/profile.css'\nimport '../css/profile-card.css'\n\nexport default function ProfileReview ({ match: { params } }) {\n  const { user } = useContext(AuthContext)\n  const { currentPost } = useContext(PostContext)\n  const [isFetching, setIsFetching] = useInfiniteScroll(fetchUserPosts)\n  const [isEdit, setIsEdit] = useState(false)\n  const [posts, setPosts] = useState([])\n  const [total, setTotal] = useState(0)\n  const [listQuery, setListQuery] = useState({\n    limit: 10,\n    offset: 0\n  })\n  function toggleTab () {\n    setIsEdit(!isEdit)\n  }\n  useEffect(() => {\n    fetchUserPosts()\n  }, [user, currentPost])\n\n  async function fetchUserPosts () {\n    if (posts.length <= total && listQuery.offset > total) {\n      setIsFetching(false)\n      return\n    }\n    setIsFetching(true)\n    await getUserPosts(params.id).then(res => {\n      setPosts(res.results)\n      setTotal(res.count)\n    })\n    setIsFetching(false)\n    setListQuery({\n      limit: listQuery.limit,\n      offset: listQuery.offset + listQuery.limit\n    })\n  }\n\n  return (\n    <Main>\n      <br />\n      <Profile total={total}>\n        <div className='column is-8'>\n          <div className='tabs is-centered is-boxed is-medium'>\n            <ul>\n              <li className={`${!isEdit ? 'is-active' : ''}`}>\n                <a onClick={toggleTab}>\n                  <span className='icon is-small'>\n                    <i className='fas fa-image' aria-hidden='true'></i>\n                  </span>\n                  <span>Posts</span>\n                </a>\n              </li>\n              <li className={`${isEdit ? 'is-active' : ''}`}>\n                <a onClick={toggleTab}>\n                  <span className='icon is-small'>\n                    <i className='fas fa-cog' aria-hidden='true'></i>\n                  </span>\n                  <span>Edit Profile</span>\n                </a>\n              </li>\n            </ul>\n          </div>\n\n          <div className='box content'>\n            {isEdit ? (\n              <>\n                <AccountForm />\n                <ProfileForm />\n                <ChangePassword />\n              </>\n            ) : (\n              <>\n                {' '}\n                {!posts.length && !isFetching ? (\n                  <div className='notification is-info'>\n                    <article className='media'>\n                      <div className='media-left'>\n                        <span className='icon'>\n                          <i className='fas fa-sad-tear'></i>\n                        </span>\n                      </div>\n                      <div className='media-content'>\n                        Nothing's here…{' '}\n                        <strong>You do not have any post yet</strong>.\n                      </div>\n                      <div className='media-right'>\n                        {/* <button className='button is-small is-primary'>\n                          Dismiss\n                        </button> */}\n                      </div>\n                    </article>\n                  </div>\n                ) : (\n                  posts.map(post => <PostPreview key={post.uuid} post={post} />)\n                )}\n                {isFetching && (\n                  <div className='has-text-centered'>\n                    Loading posts...\n                  </div>\n                )}\n              </>\n            )}\n          </div>\n        </div>\n      </Profile>\n    </Main>\n  )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { getToken } from '../util/auth'\n\nconst GuardedRoute = ({ component: Component, auth, ...rest }) => {\n  const token = getToken()\n\n  if (token) {\n    return <Route {...rest} render={props => <Component {...props} />} />\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        auth ? <Component {...props} /> : <Redirect to='/login' />\n      }\n    />\n  )\n}\n\nexport default GuardedRoute\n","import React, { useContext } from 'react'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport Home from '../pages/Home'\nimport Login from '../pages/Login'\nimport Register from '../pages/Register'\nimport Profile from '../pages/Profile'\nimport { AuthContext } from '../context/auth'\nimport GuardedRoute from './GuardedRoute'\n\nexport default function App () {\n  const { isAuthenticated } = useContext(AuthContext)\n\n  return (\n    <Router>\n      <Switch>\n        <Route path='/register'>\n          <Register />\n        </Route>\n        <Route path='/login'>\n          <Login />\n        </Route>\n        <GuardedRoute\n          path='/profile/:id'\n          component={Profile}\n          auth={isAuthenticated}\n        />\n        <GuardedRoute path='/' component={Home} auth={isAuthenticated} />\n      </Switch>\n    </Router>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './router'\nimport { AuthContextProvider } from './context/auth'\nimport { PostContextProvider } from './context/posts'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthContextProvider>\n      <PostContextProvider>\n        <App />\n      </PostContextProvider>\n    </AuthContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister()\n"],"sourceRoot":""}